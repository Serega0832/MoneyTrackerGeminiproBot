# keyboards.py
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ config
from config import EXPENSE_CATEGORIES as STD_EXPENSE_CATS
from config import INCOME_CATEGORIES as STD_INCOME_CATS
from typing import List # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º List –¥–ª—è —Ç–∞–π–ø-—Ö–∏–Ω—Ç–æ–≤

# --- –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (Reply Keyboard) ---
btn_add_expense = KeyboardButton(text="üìä –ó–∞–ø–∏—Å–∞—Ç—å –†–∞—Å—Ö–æ–¥")
btn_add_income = KeyboardButton(text="üí∞ –ó–∞–ø–∏—Å–∞—Ç—å –î–æ—Ö–æ–¥")
btn_get_report = KeyboardButton(text="üìà –û—Ç—á–µ—Ç –∑–∞ –º–µ—Å—è—Ü")
btn_get_prev_report = KeyboardButton(text="üìÖ –û—Ç—á–µ—Ç –∑–∞ –ø—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü")
btn_get_custom_report = KeyboardButton(text="üìä –û—Ç—á–µ—Ç –∑–∞ –ø–µ—Ä–∏–æ–¥") # –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞
btn_get_recent = KeyboardButton(text="üïí –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏")
btn_delete_last = KeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ")
btn_manage_categories = KeyboardButton(text="‚öôÔ∏è –ú–æ–∏ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏")

# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (v3 —Å—Ç–∏–ª—å)
main_kb_layout = [
    [btn_add_expense, btn_add_income],               # –°—Ç—Ä–æ–∫–∞ 1
    [btn_get_report, btn_get_prev_report],           # –°—Ç—Ä–æ–∫–∞ 2
    [btn_get_custom_report, btn_get_recent],         # –°—Ç—Ä–æ–∫–∞ 3 (—Å –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–æ–π)
    [btn_delete_last, btn_manage_categories]         # –°—Ç—Ä–æ–∫–∞ 4
]
# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
main_kb = ReplyKeyboardMarkup(keyboard=main_kb_layout, resize_keyboard=True)


# --- Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –í–´–ë–û–†–ê –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ---
async def get_category_choice_kb(user_id: int, category_type: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
    –û–±—ä–µ–¥–∏–Ω—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.

    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram.
    :param category_type: –¢–∏–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ('expense' –∏–ª–∏ 'income').
    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup.
    """
    # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç db, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–º –∏–º–ø–æ—Ä—Ç–æ–º
    # –µ—Å–ª–∏ keyboards –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –≤ db (—Ö–æ—Ç—è –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —ç—Ç–æ –Ω–µ —Ç–∞–∫)
    import db
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –ë–î
    user_cats = await db.get_user_categories(user_id, category_type)
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    standard_cats = STD_EXPENSE_CATS if category_type == 'expense' else STD_INCOME_CATS

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ø–∏—Å–∫–∏ —á–µ—Ä–µ–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤,
    # –∑–∞—Ç–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å–ø–∏—Å–æ–∫ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º.
    all_cats_set = set(standard_cats) | set(user_cats)
    all_cats_sorted = sorted(list(all_cats_set))

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º InlineKeyboardBuilder –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è
    builder = InlineKeyboardBuilder()
    callback_prefix = "exp_cat:" if category_type == 'expense' else "inc_cat:"

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    for cat in all_cats_sorted:
        builder.add(InlineKeyboardButton(text=cat, callback_data=f"{callback_prefix}{cat}"))

    # –í—ã—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—ã (–ø–æ 2 –≤ —Ä—è–¥, –µ—Å–ª–∏ –∏—Ö –±–æ–ª—å—à–µ 4, –∏–Ω–∞—á–µ –≤ –æ–¥–∏–Ω —Ä—è–¥)
    num_columns = 2 if len(all_cats_sorted) > 4 else 1
    builder.adjust(num_columns)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤—É—é —Ä–∞–∑–º–µ—Ç–∫—É
    return builder.as_markup()

# --- –§—É–Ω–∫—Ü–∏–∏-–æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å) ---
async def get_expense_categories_kb(user_id: int) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤."""
    return await get_category_choice_kb(user_id, 'expense')

async def get_income_categories_kb(user_id: int) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤."""
    return await get_category_choice_kb(user_id, 'income')


# --- Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –û—Ç–º–µ–Ω—ã ---
btn_cancel = KeyboardButton(text="–û—Ç–º–µ–Ω–∞")
# –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
cancel_kb_layout = [
    [btn_cancel]
]
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã, –∫–æ—Ç–æ—Ä–∞—è –∏—Å—á–µ–∑–∞–µ—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
cancel_kb = ReplyKeyboardMarkup(
    keyboard=cancel_kb_layout,
    resize_keyboard=True,
    one_time_keyboard=True # –£–¥–æ–±–Ω–æ –¥–ª—è FSM
)


# --- Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –£–ü–†–ê–í–õ–ï–ù–ò–Ø –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ ---

def get_manage_categories_kb() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data="cat_manage:add"))
    builder.row(InlineKeyboardButton(text="‚ûñ –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data="cat_manage:delete"))
    builder.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="cat_manage:back")) # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    return builder.as_markup()

def get_category_type_kb(action_prefix: str) -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–î–æ—Ö–æ–¥/–†–∞—Å—Ö–æ–¥).

    :param action_prefix: –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback_data (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'cat_add_type:' –∏–ª–∏ 'cat_del_type:').
    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup.
    """
    builder = InlineKeyboardBuilder()
    # –î–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞
    builder.add(InlineKeyboardButton(text="–†–∞—Å—Ö–æ–¥", callback_data=f"{action_prefix}expense"))
    builder.add(InlineKeyboardButton(text="–î–æ—Ö–æ–¥", callback_data=f"{action_prefix}income"))
    # –ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥ –ø–æ–¥ –Ω–∏–º–∏
    builder.row(InlineKeyboardButton(text="<< –ù–∞–∑–∞–¥", callback_data="cat_manage_menu")) # –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    return builder.as_markup()

def get_categories_for_delete_kb(categories: List[str]) -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.

    :param categories: –°–ø–∏—Å–æ–∫ –∏–º–µ–Ω –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup.
    """
    builder = InlineKeyboardBuilder()
    if not categories:
        # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        builder.row(InlineKeyboardButton(text="–ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", callback_data="no_cats_to_delete"))
    else:
        # –î–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º 'cat_delete_confirm:'
        for cat in categories:
            builder.row(InlineKeyboardButton(text=f"‚ùå {cat}", callback_data=f"cat_delete_confirm:{cat}"))
    # –ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    builder.row(InlineKeyboardButton(text="<< –ù–∞–∑–∞–¥", callback_data="cat_delete_choose_type"))
    return builder.as_markup()


# --- Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –£–î–ê–õ–ï–ù–ò–Ø –¢–†–ê–ù–ó–ê–ö–¶–ò–ò ---
def get_delete_confirmation_kb(transaction_id: int) -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.

    :param transaction_id: ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞.
    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup.
    """
    builder = InlineKeyboardBuilder()
    # –î–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥: –î–∞ –∏ –û—Ç–º–µ–Ω–∞
    builder.add(InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"delete_confirm:{transaction_id}"))
    builder.add(InlineKeyboardButton(text="üö´ –û—Ç–º–µ–Ω–∞", callback_data="delete_cancel"))
    # –í—ã—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –≤ –æ–¥–∏–Ω —Ä—è–¥ –Ω–µ –Ω—É–∂–Ω–æ, —Ç.–∫. builder.add –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ —Ç–µ–∫—É—â–∏–π —Ä—è–¥
    return builder.as_markup()